<?php

namespace controller;

use Symfony\Component\HttpFoundation\Request;
use SequenceState;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-01-08 at 11:30:11.
 */
class TestAbstractControllerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var TestAbstractController
     */
    protected $object;
    
    /**
     *
     * @var SequenceState 
     */
    protected $_sequenceState;
    /**
     *
     * @var Request 
     */
    protected $_request;
    

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->_request = Request::createFromGlobals();
        $this->_sequenceState= new SequenceState(true);//no session
        $this->object = new TestAbstractController($this->_request, $this->_sequenceState);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
//    public function modelsProvider(){
//        $Ok1 = array('_some_attribute1_of_model_with_id'=> 'some value 1');
//        $R_Ok1 = array('_some_attribute1_of_model_with_id'=> 'some value 1');
//        $Ok2 = array('_some_attribute3_of_model_with_id#2' => 'some value 12');
//        $R_Ok2 = array('_some_attribute3_of_model_with_id'=> array('some value 12',2));
//        $Ok3 = array('_some_attribute3_of_model_with_id#3' => 'some value 13');
//        $R_Ok3 = array('_some_attribute3_of_model_with_id'=> array('some value 13',3));
//        $Ok4 = array('_some_attribute3_of_model_with_id#2#3' => 'some value 14');
//        $R_Ok4 = array('_some_attribute3_of_model_with_id'=> array('some value 14',2,3));
//        $Ok5 = array('_some_attribute3_of_model_with_id#some_arg#3' => 'some value 14');
//        $R_Ok5 = array('_some_attribute3_of_model_with_id'=> array('some value 14','some_arg',3));
//        return array(
//            array($Ok1, $R_Ok1),
//            array($Ok2, $R_Ok2),
//            array($Ok3, $R_Ok3),
//            array($Ok4, $R_Ok4),
//            array($Ok5, $R_Ok5)
//        );
//    }
//
//    /**
//     * @dataProvider modelsProvider
//     */
//    public function testBuildArgumentsForSetterProperty($model, $result){
//        $this->assertEquals($result,$this->object->buildArgumentsForSetterProperty($model));
//    }
    
    public function testPregMatch(){
        $keyFormKo1 = 'something';
//        $keyFormKo2 = '#something#else';
        $keyForm1 = '_some_attribute3_of_model_with_id#';
        $keyForm2 = '_some_attribute3_of_model_with_id#1';
        $keyForm3 = '_some_attribute3_of_model_with_id#1#2';
        $reg = '/(?P<param>\w+)#/';
        $matches= array(); 
        $this->assertEquals(0,preg_match($reg, $keyFormKo1, $matches));
//        $this->assertEquals(0,preg_match($reg, $keyFormKo2, $matches)); // FIXME doesn't pass
        $this->assertEquals(1,preg_match($reg, $keyForm1, $matches));
        $this->assertEquals(1,preg_match($reg, $keyForm2, $matches));
        $this->assertEquals(1,preg_match($reg, $keyForm3, $matches));
        //$this->assertEquals(1,preg_match('/(?P<param>\w+)#(?P<id>\d+)$/', $keyForm, $matches));
        $this->assertEquals('_some_attribute3_of_model_with_id',$matches['param']);
//        $this->assertEquals($matches['id'],'1');
//        $keyForm = '_some_attribute3_of_model_with_id#1with_some_buggy_extra';
//        $this->assertEquals(0,preg_match('/(?P<param>\w+)#(?P<id>\d+)#(?P<id2>\d+)/', $keyForm, $matches));
//        $matches= array();
//        $keyForm2 = '_some_attribute3_of_model_with_id#1##2';
//        $this->assertEquals(0,preg_match('/(?P<param>\w+)#(?P<id>\d+)$/', $keyForm2, $matches));
//        $this->assertEquals(1,preg_match('/(?P<param>\w+)#(?P<id>\d+)##(?P<id2>\d+)$/', $keyForm2, $matches));
//        $this->assertEquals($matches['param'],'_some_attribute3_of_model_with_id');
//        $this->assertEquals($matches['id'],'1');
//        $this->assertEquals($matches['id2'],'2');
    }
    
    public function testMergeArray(){
        $a = array(0=>'a', 1=>'b');
        $b = array(0=>'c', 1=>'d');
        $t = array_merge($a,$b);
        $this->assertEquals(array(0=>'a', 1=>'b', 2=>'c', 3=>'d'),$t);
    }

    public function paramsProvider(){
        $Ok1 = array(
            '_some_attribute1_of_model_with_id#1' => 'some value 1',
            '_some_attribute2_of_model_with_id#1' => 'some value 2',
            'ButtonSubmit_do_something' => 1,
            );
        $R_Ok1 = array(
            1=>array('_some_attribute1_of_model_with_id'=> 'some value 1', '_some_attribute2_of_model_with_id'=> 'some value 2')
        );
        $Ok2 = array(
            '_some_attribute1_of_model_with_id#1' => 'some value 1',
            '_some_attribute2_of_model_with_id#1' => 'some value 2',
            '_some_attribute1_of_model_with_id#2' => 'some value 3',
            '_some_attribute2_of_model_with_id#2' => 'some value 4',
            'ButtonSubmit_do_something' => 1,
            );
        $R_Ok2 = array(
            1=>array('_some_attribute1_of_model_with_id'=> 'some value 1', '_some_attribute2_of_model_with_id'=> 'some value 2'),
            2=>array('_some_attribute1_of_model_with_id'=> 'some value 3', '_some_attribute2_of_model_with_id'=> 'some value 4')
        );
        $Ok3 = array(
            '_some_attribute1_of_model_with_id#1' => 'some value 1',
            '_some_attribute2_of_model_with_id#1' => 'some value 2',
            '_some_attribute3_of_model_with_id#1#2' => 'some value 12',
            '_some_attribute3_of_model_with_id#1#3' => 'some value 13',
            'ButtonSubmit_do_something' => 1,
            );
        $R_Ok3 = array(
            1=>array(   '_some_attribute1_of_model_with_id'=> 'some value 1', 
                        '_some_attribute2_of_model_with_id'=> 'some value 2',
                        0=>array('_some_attribute3_of_model_with_id'=> array('some value 12',2)),
                        1=>array('_some_attribute3_of_model_with_id'=> array('some value 13',3))
                    )
            );
        $Ok4 = array(
            '_some_attribute1_of_model_with_id#1' => 'some value 1',
            '_some_attribute2_of_model_with_id#1' => 'some value 2',
            '_some_attribute3_of_model_with_id#1#2' => 'some value 12',
            '_some_attribute3_of_model_with_id#1#3' => 'some value 13',
            '_some_attribute1_of_model_with_id#2' => 'some value 3',
            '_some_attribute2_of_model_with_id#2#4' => 'some value 14',
            '_some_attribute3_of_model_with_id#2#3' => 'some value 13',
            'ButtonSubmit_do_something' => 1,
            );
        $R_Ok4 = array(
            1=>array(   '_some_attribute1_of_model_with_id'=> 'some value 1', 
                        '_some_attribute2_of_model_with_id'=> 'some value 2',
                        0=>array('_some_attribute3_of_model_with_id'=> array('some value 12',2)),
                        1=>array('_some_attribute3_of_model_with_id'=> array('some value 13',3))
                    ),
            2=>array(   '_some_attribute1_of_model_with_id'=> 'some value 3' ,
                        0=>array('_some_attribute2_of_model_with_id'=> array('some value 14',4)),
                        1=>array('_some_attribute3_of_model_with_id'=> array('some value 13',3))
                    )
            );
        $Ok5 = array(
            '_some_attribute1_of_model_with_id#1' => 'some value 1',
            '_some_attribute2_of_model_with_id#1' => 'some value 2',
            '_some_attribute3_of_model_with_id#1#2' => 'some value 12',
            '_some_attribute3_of_model_with_id#1#3' => 'some value 13',
            '_some_attribute1_of_model_with_id#2' => 'some value 3',
            '_some_attribute2_of_model_with_id#2' => 'some value 4',
            '_some_attribute2_of_model_with_id#2#4' => 'some value 14',
            '_some_attribute3_of_model_with_id#2#3' => 'some value 13',
            '_some_attribute2_of_model_with_id#2#text_arg' => 'some value 4', 
            'ButtonSubmit_do_something' => 1,
            );
        $R_Ok5 = array(
            1=>array(   '_some_attribute1_of_model_with_id'=> 'some value 1', 
                        '_some_attribute2_of_model_with_id'=> 'some value 2',
                        0=>array('_some_attribute3_of_model_with_id'=> array('some value 12',2)),
                        1=>array('_some_attribute3_of_model_with_id'=> array('some value 13',3))
                    ),
            2=>array(   '_some_attribute1_of_model_with_id'=> 'some value 3', 
                        '_some_attribute2_of_model_with_id'=> 'some value 4',
                        0=>array('_some_attribute2_of_model_with_id'=> array('some value 14',4)),
                        1=>array('_some_attribute3_of_model_with_id'=> array('some value 13',3)),
                        2=>array('_some_attribute2_of_model_with_id'=> array('some value 4','text_arg'))
                    )
        );
        $Ko1 = array(
            '_some_attribute1_not_in_model_with_id#1' => 'some value 1',
            '_some_attribute2_not_in_model_with_id#1' => 'some value 2',
            'ButtonSubmit_do_something' => 1,
            );
        $R_Ko1 = array(); 
        return array(
            array($Ok1, $R_Ok1),
            array($Ok2, $R_Ok2),
            array($Ok3, $R_Ok3),
            array($Ok4, $R_Ok4),
            array($Ok5, $R_Ok5),
            array($Ko1, $R_Ko1)
        );
    }
    
    /**
     * @dataProvider paramsProvider
     */
    public function testfindAllParamsFromForm($params, $results){
        $varsModel = array(
            '_some_attribute1_of_model_with_id' ,
            '_some_attribute2_of_model_with_id' ,
            '_some_attribute3_of_model_with_id' ,
            '_some_attribute4_of_model_with_id' ,
        );
        $this->assertEquals($results,$this->object->findAllParamsFromForm($params, $varsModel));
        
    }
    

}
