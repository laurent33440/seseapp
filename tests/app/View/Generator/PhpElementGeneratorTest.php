<?php

namespace View\Generator;

use Model\AModel;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-06-26 at 09:45:30.
 */
class PhpElementGeneratorTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var PhpElementGenerator
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers View\Generator\PhpElementGenerator::generateElement
     * @todo   Implement testGenerateElement().
     */
    public function testGenerateElement() {
        $struct = ' il etait une fois un chien errant qui aimait regarder la lune';
        $exp = ' il etait 1 fois un chien errant qui aimait regarder 2 l1';
        $params = array('une'=>1, 'la'=>2);
        $this->object = new PhpElementGenerator($struct, $params);
        $r = $this->object->generateElement();
        $this->assertEquals($exp,$r);
        $byValue = AModel::__BY_VALUE_TO_TEMPLATE__.'aimé';
        $struct = " il etait une fois un chien errant qui aimait regarder la lune";
        $params = array('une'=>1, 'errant'=>$byValue);
        $exp = ' il etait 1 fois un chien \''.AModel::__BY_VALUE_TO_TEMPLATE__.'aimé\' qui aimait regarder la l1';
        $this->object = new PhpElementGenerator($struct, $params);
        $r = $this->object->generateElement();
        $this->assertEquals($exp,$r);
        
//        $byValue = AModel::__BY_VALUE_TO_TEMPLATE__.'aimé';
//        $struct = " il etait une fois un chien errant qui aimait regarder la lune";
//        $params = array('une'=>1, 'errant'=>$byValue);
//        $exp = ' il etait 1 fois un chien \'aimé\' qui aimait regarder la l1';
//        $this->object = new PhpElementGenerator($struct, $params);
//        $r = $this->object->generateElement();
//        $this->assertEquals($exp,$r);
       
//        $this->markTestIncomplete(
//                'This test has not been implemented yet.'
//        );
    }

}
