<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-05-23 at 16:23:36.
 */
class CreateDataBaseControllerTest extends PHPUnit_Framework_TestCase {

    /**
     * @var RequestHandler
     */
    protected $request;
    protected $_sequenceState;

    /**
     * @var CreateDataBaseController
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * FIXME to use with selenium or else 
     * @covers CreateDataBaseController
     * 
     */
//    public function testEmptyPost(){
//        $this->request = new RequestHandler;
//        $this->request->flushPostRequest();
//        $this->object = new CreateDataBaseController($this->request);
//        $this->assertTrue($this->object->isControllerRunning());
//    }

    /**
     * @covers CreateDataBaseController
     * 
     */
    public function testPostOk() {
        $this->_sequenceState = new SequenceState(true);
        $this->request = new RequestHandler;
        $this->request->setPostRequest(array('form_dbSrv' => 'localhost', 'form_dbUser' => 'laurent', 'form_dbPass' => 'laurentpass', 'form_dbName' => 'maBase'));
        $this->object = new CreateDataBaseController($this->request, $this->_sequenceState);
        $this->assertNotNull($this->object->getModel());
        $this->assertEquals('localhost', $this->object->getModel()->get_dbSrv());
        $this->assertEquals('laurent', $this->object->getModel()->get_dbUser());
        $this->assertEquals('laurentpass', $this->object->getModel()->get_dbPass());
        $this->assertEquals('maBase', $this->object->getModel()->get_dbName());
    }

    /**
     * @covers CreateDataBaseController
     * @expectedException Exception
     */
    public function testPostMissing() {
        $this->_sequenceState = new SequenceState(true);
        $this->request = new RequestHandler;
        $this->request->setPostRequest(array('form_dbSrv' => 'localhost', 'form_dbUser' => 'laurent', 'form_dbName' => 'maBase'));
        $this->object = new CreateDataBaseController($this->request, $this->_sequenceState);
        $this->assertNotNull($this->object->getModel());
        $this->assertEquals('localhost', $this->object->getModel()->get_dbSrv());
        $this->assertEquals('laurent', $this->object->getModel()->get_dbUser());
        $this->assertEquals('laurentpass', $this->object->getModel()->get_dbPass());
        $this->assertEquals('maBase', $this->object->getModel()->get_dbName());
    }

}
