<?php

namespace Controller;

use Symfony\Component\HttpFoundation\Request;
use Model\LoginModel;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-03-12 at 09:41:51.
 */
class LoginControllerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var LoginController
     */
    protected $object;
    
    /**
     * @var Request 
     */
    protected $_request;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->_request = Request::createFromGlobals();
        $this->object = new LoginController($this->_request);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Controller\LoginController::run
     * @todo   Implement testRun().
     */
    public function testRun() {
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
        $this->_object->setStateController(AControllerState::RUNNING);
        $parameters = array('_userName'=>'dieu', '_userPass'=>'dieu');
        $this->_request = Request::create('http://localhost/sese/index.php', 'POST', $parameters);
        $this->object->run();
        //$this->_object->
        //$this->_object->setStateController(AControllerState::TERMINATED);
       
        
    }

    /**
     * @covers Controller\LoginController::buildModelView
     * @todo   Implement testBuildModelView().
     */
    public function testBuildModelView() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Controller\LoginController::compute
     * @todo   Implement testCompute().
     */
    public function testCompute_modelVarsOk() {
        $this->object->setModel(new LoginModel);
        $parameters = array('_userName'=>'laurent', '_userPass'=>'laurentpass'); //unknown in db
        $this->assertFalse($this->object->compute($parameters));
        $model= $this->object->getModel();
        $this->assertEquals('laurent',$model->get_userName());
        $this->assertEquals('laurentpass',$model->get_userPass());
        $parameters = array('_userName'=>'dieu', '_userPass'=>'dieu'); //known in db
        $this->assertTrue($this->object->compute($parameters));
        $model= $this->object->getModel();
        $this->assertEquals('dieu',$model->get_userName());
        $this->assertEquals('dieu',$model->get_userPass());
        $this->assertEquals('administrateur',$model->get_groupNameOfUser());
    }

}
